{"version":3,"sources":["JobButtons.js","JobInfo.js","App.js","index.js"],"names":["JobButtons","jobs","value","setValue","className","map","job","index","key","id","onClick","company","JobInfo","duties","dates","title","duty","App","useState","setJobs","loading","setLoading","getJobsData","a","fetch","response","json","newJobs","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MA8BeA,MA5Bf,YAAiD,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAQC,EAAY,EAAZA,SAClC,OACE,6BAEE,yBAAKC,UAAU,iBAEZH,EAAKI,KAAI,SAACC,EAAKC,GACd,OACE,4BACEC,IAAKF,EAAIG,GACTC,QAAS,WAIPP,EAASI,IAGXH,UAAS,kBAAaG,IAAUL,GAAS,eAExCI,EAAIK,e,OCMJC,EAxBC,SAAC,GAA2C,IAAzCD,EAAwC,EAAxCA,QAASE,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAON,EAAS,EAATA,GAChD,OACE,6BAEE,6BAASD,IAAKC,EAAIL,UAAU,YAE1B,4BAAKW,GACL,4BAAKJ,GACL,uBAAGP,UAAU,YAAYU,GAGxBD,EAAOR,KAAI,SAACW,EAAMT,GACjB,OACE,yBAAKC,IAAKD,EAAOH,UAAU,YACzB,kBAAC,IAAD,CAAoBA,UAAU,aAC9B,2BAAIY,UC4CHC,MAvDf,WAAe,MAEWC,mBAAS,IAFpB,mBAENjB,EAFM,KAEAkB,EAFA,OAIiBD,oBAAS,GAJ1B,mBAINE,EAJM,KAIGC,EAJH,OAMaH,mBAAS,GANtB,mBAMNhB,EANM,KAMCC,EAND,KASPmB,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAXf,6CAUU,cACZC,EADY,gBAEIA,EAASC,OAFb,OAEZC,EAFY,OAIlBR,EAAQQ,GACRN,GAAW,GALO,2CAAH,qDAajB,OAJAO,qBAAU,WACRN,MACC,IAECF,EAEA,6BAAShB,UAAU,mBACjB,4CAWJ,6BAASA,UAAU,WAEjB,yBAAKA,UAAU,SACb,0CACA,yBAAKA,UAAU,eAKjB,yBAAKA,UAAU,eAEb,kBAAC,EAAD,CAAYH,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,IAChD,kBAAC,EAAYF,EAAKC,KAEpB,4BAAQE,UAAU,OAAlB,eCpDNyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c31fd1e1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction JobButtons({ jobs, value , setValue }) {\r\n  return (\r\n    <div>\r\n      {/* button contianer */}\r\n      <div className=\"btn-container\">\r\n        {/* create button for each item of array */}\r\n        {jobs.map((job, index ) => {\r\n          return (\r\n            <button\r\n              key={job.id}\r\n              onClick={() => {\r\n                {\r\n                  /* create onclick function to setValue with index of job */\r\n                }\r\n                setValue(index);\r\n              }}\r\n              // put class job-btn by default then checked if index of that button === value then adding active class\r\n              className={`job-btn ${index === value && \"active-btn\"}`}\r\n            >\r\n              {job.company}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobButtons;\r\n","import React from \"react\";\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\r\n\r\nconst JobInfo = ({ company, duties, dates, title, id }) => {\r\n  return (\r\n    <div>\r\n      {/* jobs info */}\r\n      <article key={id} className=\"job-info\">\r\n        {/* display those value */}\r\n        <h3>{title}</h3>\r\n        <h4>{company}</h4>\r\n        <p className=\"job-date\">{dates}</p>\r\n        {/* itterate over duties  duties is array */}\r\n\r\n        {duties.map((duty, index) => {\r\n          return (\r\n            <div key={index} className=\"job-desc\">\r\n              <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\r\n              <p>{duty}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobInfo;\r\n","import React, { useState, useEffect } from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport JobButtons from \"./JobButtons\";\nimport JobInfo from \"./JobInfo\";\n\n// API data array of objects\nconst url = \"https://course-api.com/react-tabs-project\";\nfunction App() {\n  // setup jobs initial -> as an empty array later we will store the rcvd API data\n  const [jobs, setJobs] = useState([]);\n  // setup loading message before fetching data\n  const [loading, setLoading] = useState(true);\n  // Since jobs is Array and Array is Zero index so we have to setup value with initial value 0 to use thi value later\n  const [value, setValue] = useState(0);\n\n  // create Function to fetch data from url API\n  const getJobsData = async () => {\n    const response = await fetch(url);\n    const newJobs = await response.json();\n\n    setJobs(newJobs); // store rcvd data in jobs variabe\n    setLoading(false); // change loading state to be false\n  };\n\n  //using useEffect to invoke feth function\n  useEffect(() => {\n    getJobsData(); //invoke fetch function\n  }, []);\n\n  if (loading) {\n    return (\n      <section className=\"section loading\">\n        <h2> Loading...</h2>\n      </section>\n    );\n  }\n\n  // Diplay the first Job in the array = index 0\n  // destructure jobs(array of objects) && jobs[0] is the 1st object in array\n  // const { company, duties, dates, title, id } = jobs[value];\n\n  return (\n    // Diplay the Job\n    <section className=\"section\">\n      {/* section title */}\n      <div className=\"title\">\n        <h2>experience</h2>\n        <div className=\"underline\"></div>\n      </div>\n\n      {/* center of jbs */}\n\n      <div className=\"jobs-center\">\n        {/* create sperated comp */}\n        <JobButtons jobs={jobs} value={value} setValue={setValue} />\n        <JobInfo {...jobs[value]} />\n      </div>\n      <button className=\"btn\">More Info</button>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}